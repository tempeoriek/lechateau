@model CheckoutBillingAddressModel
@using Nop.Web.Models.Checkout;
@{

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);

    //ViewBag.HideMenu = "true";

}



@section Left{
    @*@Html.Partial("MenuStatic")*@

    @*@Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Address })*@
}






<div class="col-main">

    @using (Html.BeginRouteForm("CheckoutBillingAddress", FormMethod.Post))
    {

        <div class="row">

            <div class="col-sm-6">

                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3 class="text-uppercase" style="font-weight:700">@T("Checkout.BillingAddress")</h3>
                    </div>
                    <div class="panel-body">
                        <div class="checkout-blox">
                            @if (Model.ExistingAddresses.Count > 0){

                                @*<strong>@T("Checkout.SelectBillingAddress")</strong>*@
                                foreach (var item in Model.ExistingAddresses)
                                {
                                    <div class="address-item">
                                        <ul class="address-box list-unstyled ">
                                            <li style="">
                                                @item.FirstName @item.LastName

                                                @if (item.CompanyEnabled && !String.IsNullOrEmpty(item.Company))
                                                {
                                                    <br />@item.Company
                                                }

                                                @if (item.StreetAddressEnabled)
                                                {
                                                    <br />@item.Address1
                                                }
                                                @if (item.StreetAddress2Enabled && !String.IsNullOrEmpty(item.Address2))
                                                {
                                                    <br />@item.Address2
                                                }
                                                @if (item.CityEnabled || item.StateProvinceEnabled || item.ZipPostalCodeEnabled)
                                                {
                                                    if (item.CityEnabled)
                                                    {
                                                        <br />@item.City
                                                    }
                                                    if (item.CityEnabled && (item.StateProvinceEnabled || item.ZipPostalCodeEnabled))
                                                    {
                                                        <text>,</text>
                                                    }
                                                    @*@if (item.StateProvinceEnabled)
                                                    {
                                                     @item.StateProvinceName
                                                     }*@
                                                    if (item.ZipPostalCodeEnabled)
                                                    {
                                                        @item.ZipPostalCode
                                                    }
                                                }
                                                @if (item.CountryEnabled && !String.IsNullOrEmpty(item.CountryName))
                                                {
                                                    <br />@item.CountryName
                                                }

                                                @if (!String.IsNullOrEmpty(item.FormattedCustomAddressAttributes))
                                                {
                                                    <br />
                                                        @Html.Raw(item.FormattedCustomAddressAttributes)
                                                }


                                                <br/>@item.Email
                                                <br />P: @item.PhoneNumber

                                            @*@if (item.FaxEnabled)
                                            {
                                                <br />
                                                <label>@T("Address.Fields.FaxNumber"):</label>
                                                <span>@item.FaxNumber</span>
                                                
                                            }*@

                                            </li>
                                           
                                           
                                        </ul>
                                        <div class="select-button">
                                            <input type="button" value="@T("Checkout.BillToThisAddress")" class="btn btn-default" onclick="setLocation('@Url.RouteUrl("CheckoutSelectBillingAddress", new {addressId = item.Id})') " />
                                            <br/><br/>
                                        </div>
                                    </div>
                                }

                            }
                        </div>
                    </div>
                </div>
            </div>




            <div class="col-sm-6">
                <!-- billing -->
                <div class="panel panel-info">
                    <div class="panel-heading">
                        @*<h1>@T("Checkout.BillingAddress")</h1>*@
                        @if (Model.ExistingAddresses.Count > 0)
                        {
                            <h3>@T("Checkout.OrEnterNewAddress")</h3>
                        }
                        else
                        {
                            <h3>@T("Checkout.EnterBillingAddress")</h3>
                        }
                    </div>
                    <div class="panel-body">
                        <div class="checkout-blox">
                            <div class="enter-address">
                                @{
                                    var validationSummary = Html.ValidationSummary(true);
                                }
                                @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                                {
                                    <div class="message-error">@validationSummary</div>
                                }
                                @{
                                    var dataDictAddress = new ViewDataDictionary();
                                    //Merge ModelState (required for validation)
                                    dataDictAddress.ModelState.Merge(ViewData.ModelState);
                                    dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                                    @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)
                                }
                            </div>
                            <div class="buttons  mt-default" style="text-align:right;">
                                <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        
        
        </div>
    }


</div>

