@model IList<ProductOverviewModel>

@using Nop.Web.Models.Catalog;


@if (Model.Count > 0)
{
  <div class="row" style="margin-top: 10%; margin-bottom: 5%;">
    <div class="col-12 col-md-12 d-flex justify-content-center">
      <h1 style="color: black; font-style: italic; font-size: 28px;">Related Products</h1>
    </div>
  </div>

  @* Best Seller Desktop *@
  <div class="d-none d-md-block hidden-xs hidden-sm" style="position: relative;">
    <div class="row mb-5 carouseldesktop">
      @for (int i = 0; i < Model.Count(); i++)
      {
        var temp = Model[i];
        string[] brands = temp.Brand != null ? temp.Brand.Split(';') : null;
        string Brands = brands != null ? brands[1] : null;

        <div class="col-12">
          <div class="row mx-2">
            <div class="ori-product-img">
              <a href="@Url.RouteUrl("Product", new { SeName = temp.SeName})" class="clean">
                <img src="@temp.DefaultPictureModel.ImageUrl" class="img-fluid center-block" />
              </a>
            </div>
          </div>
    
          <div class="row mx-2">
            <a class="clean" style="text-decoration: none; margin: 0; padding: 0; font-size: 15px; font-weight: bold; margin-bottom: -9px;" href="@Url.RouteUrl("Product", new { SeName = temp.SeName})">
              @temp.Name
            </a>
          </div>
          <div class="row mx-2" style="font-size: 14px; line-height: 22px;">
            <a class="clean" style="font-weight: bold; text-transform: uppercase; text-decoration: none;" href="@Url.RouteUrl("Product", new { SeName = temp.SeName})">
              @Brands
            </a>
          </div>
          <div class="row mx-2" style="margin-top: -10px; font-size: 14px;">
            @if (temp.ProductPrice.AvailableForPreOrder) {
              <div class="price">Request A Quote</div>
            } else {
              <p>@temp.ProductPrice.Price</p>
            }

          </div>
        </div>
      }
    </div>

    <div class="row">
      <div style="position: absolute; top: 35%; left: 10%;">
        <a role="button" data-slide="prev" class="prevslider">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class=" sr-only">Previous</span>
        </a>
      </div>
      <div style="position: absolute; top: 35%; right: 10%;">
        <a role="button" data-slide="next" class="nextslider">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class=" sr-only">Next</span>
        </a>
      </div>
    </div>
  </div>


  @* Best Seller Mobile *@
  <div class="row d-block d-md-none carousel slide" style="margin-bottom: 30%;" data-ride="carousel" id="carouselNewArrivalMobile">
    <div class="carousel-inner col-12 d-block d-md-block position-relative">
      @{
          var firstactives = "active";
          for (int z = 0; z < Model.Count(); z++)
          {
            var temp = Model[z];
            string[] brands = temp.Brand != null ? temp.Brand.Split(';') : null;
            string Brands = brands != null ? brands[1] : null;
            if (z > 0)
            {
                firstactives = "";
            }

            <div class="carousel-item @firstactives">
              <div class="row mx-4">
                <a href="@Url.RouteUrl("Product", new { SeName = temp.SeName})" class="clean">
                  <img class="d-block w-100" src="@temp.DefaultPictureModel.ImageUrl">
                </a>
              </div>
              <div class="row mx-4">
                <a href="@Url.RouteUrl("Product", new { SeName = temp.SeName})" class="clean" style="text-decoration: none; margin: 0; padding: 0; font-size: 16px; font-weight: bold; margin-bottom: -9px;">
                  @temp.Name
                </a>
              </div>
              <div class="row mx-4">
                <a href="@Url.RouteUrl("Product", new { SeName = temp.SeName})" class="clean" style="text-decoration: none; margin: 0; padding: 0; font-size: 14px; font-weight: bold; text-transform: uppercase;">
                  @Brands
                </a>
              </div>
              <div class="row mx-4" style="margin-top: -10px; font-size: 14px;">
                @if (temp.ProductPrice.AvailableForPreOrder) {
                  <div class="price">Request A Quote</div>
                } else {
                  <p>@temp.ProductPrice.Price</p>
                }
              </div>
            </div>
          }
      }
    </div>
    <a class="mx-3 carousel-control-prev" href="#carouselNewArrivalMobile" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="mx-3 carousel-control-next" href="#carouselNewArrivalMobile" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
}

<script src="~/Scripts/app/slick/slick.js" type="text/javascript" charset="utf-8"></script>
<script>
    $(document).ready(function () {
      $('.carousel').carousel({
        touch: true
      });

    });
    $(document).ready(function () {
      $('.carouseldesktop').slick({
      slidesToShow: 4,
      dots: false,
      centerMode: false,
      });
    });
     $(document).ready(function () {
      $('.carouseldesktop').slick({
        slidesToShow: 4,
        dots: false,
        centerMode: false,
      });
    });

    $('.prevslider').click(function () {
      $('.carouseldesktop').slick('slickPrev');
    })

    $('.nextslider').click(function () {
      $('.carouseldesktop').slick('slickNext');
    })
  //console.log(`HOMEPAGE PRODUCTS`);
  var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
  //console.log(model);
  
</script>
