@model ProductDetailsModel.AddToCartModel
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders;

@{
  var classcss = "";
  if(!Model.AvailableForPreOrder) {
    classcss = "border-cart-bottom";
  }
}
  <div class="col-12 @classcss">
    @if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
    {
      <div class="add2cart">
        @if (Model.UpdatedShoppingCartItemId > 0)
        {
          @Html.HiddenFor(x => x.UpdatedShoppingCartItemId)
        }

        @if (!Model.DisableBuyButton)
        {
          if(!Model.AvailableForPreOrder) {
            <div class="row">
              <div class="col-3 col-sm-3 col-md-3 d-flex justify-content-start" style="padding-top: 8px; margin: 0">
                <p style="font-size: 16px; font-weight: bold;">QUANTITY</p>
              </div>

              <div class="col-9 col-sm-9 col-md-9" style="padding-top: 3px; margin: 0">
                @if (Model.CustomerEntersPrice)
                {
                  <div class="customer-entered-price">
                    <div class="price-input">
                      @Html.LabelFor(model => model.CustomerEnteredPrice, new { @class = "enter-price-label" }, ":")
                      @*round price*@
                      @Html.TextBox("CustomerEnteredPrice", Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice)), new { @class = "enter-price-input" })
                    </div>
                    <div class="price-range">
                      @Model.CustomerEnteredPriceRange
                    </div>
                  </div>
                }

                @if (!String.IsNullOrEmpty(Model.MinimumQuantityNotification))
                {
                  <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
                }


                @if (Model.AllowedQuantities.Count > 0)
                {
                  @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, "QTY", new { @class = "form-control ddlAttrb" })
                }
                else
                {

                  <div class="d-flex justify-content-start" style="padding-left: 10px;">
                    <div class="d-flex justify-content-center" style="border-bottom: 2px solid #707070;  height: 32px; width: 78px;">
                      <input id="sub" type='button' value='-' class='sub quantity-btn qtyminus' field='EnteredQuantity' />
                      @Html.TextBoxFor(model => model.EnteredQuantity, new { @class = "qty", id = "EnteredQuantity", type = "number" })
                      <input id="add" type='button' value='+' class='add quantity-btn qtyplus' field='EnteredQuantity' />
                    </div>
                  </div>


                  //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                  <script type="text/javascript">
                    $(document).ready(function () {
                      $("#@Html.FieldIdFor(model => model.EnteredQuantity)").keydown(function (event) {
                        if (event.keyCode == 13) {
                          $("#add-to-cart-button-@Model.ProductId").click();
                          return false;
                        }
                      });
                    });
                  </script>

                }
              </div>

            </div>
          }
        }
      </div>
    }
  </div>

  <div class="col-12">
    @if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
    {
      if (!Model.DisableBuyButton)
      {
          var addToCartText = "";
          if (Model.UpdatedShoppingCartItemId > 0)
          {
            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
          }
          else
          {
            addToCartText = "add to bag";  //T("ShoppingCart.AddToCart").Text;
            if (Model.IsRental)
            {
              addToCartText = T("ShoppingCart.Rent").Text;
            }
            if (Model.AvailableForPreOrder)
            {
              @* addToCartText = T("ShoppingCart.PreOrder").Text; *@
              addToCartText = "REQUEST A QUOTE";
            }
          }
        if (Model.AvailableForPreOrder) {
          @* <p class="pt-2" style="color: #707070; font-size: 13px; margin: 0;">Pre-Order : 3/4 weeks from order</p> *@
          <button type="button" id="add-to-cart-button-@Model.ProductId" class="btn-addcart button_sare"
            data-productid="@Model.ProductId"
            onclick="location.href='https://wa.me/628111459933'">
            <span>@addToCartText</span>
          </button>
        } else {
          <button type="button" id="add-to-cart-button-@Model.ProductId" class="btn-addcart button_sare"
              data-productid="@Model.ProductId"
              onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;">
            <span>@addToCartText</span>
          </button>
          <button type="button" id="contact-us-@Model.ProductId" class="btn-addcart button_sare"
            data-productid="@Model.ProductId" style="margin-top: -10px;"
            onclick="location.href='https://wa.me/628111459933'">
            <span>Contact us for more info</span>
          </button>
        }

        <div id="add2cart-notification" title="@T("Common.Notification")" style="display:none;"></div>
      }
    }
  </div>

<script>
	//console.log(`ADD TO CART`);
	var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
	//console.log(model);    
</script>


