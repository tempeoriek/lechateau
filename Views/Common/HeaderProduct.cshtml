@model HeaderLinksModel
@using Nop.Web.Models.Common;
@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Services.Localization
@using Nop.Web.Framework.Themes

@{

	//logo path
	var currentThemeName = "v1"; //EngineContext.Current.Resolve<IThemeContext>().WorkingThemeName;
	var logo = "~/Themes/" + currentThemeName + "/Content/images/logo.png";

	//store name
	var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);

	//current category ID
	int currentCategoryId = 0;
	if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
		Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
	{
		currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
	}


	//current product ID
	int currentProductId = 0;
	if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
		Url.RequestContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
	{
		currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
	}

	string about, newproduct, contact, saleall;
	about = newproduct = contact = saleall = string.Empty;
	var url = HttpContext.Current.Request.Url.AbsolutePath;
	if (url.Contains("/about"))
	{
		about = "active";
	}
	else if (url.Contains("/newproducts"))
	{
		newproduct = "active";
	}
	else if (url.Contains("/contact"))
	{
		contact = "active";
	}
	else if (url.Contains("sale-all"))
	{
		saleall = "active";
	}
  string absolutepath = HttpContext.Current.Request.Url.AbsolutePath;
}

<div class="left_menu d-none d-lg-block">
  <a href="~/"><img style="width:97px;margin-left:-30px;" src="~/Themes/v1/Content/images/logo.svg" class="brandImage" /></a>
  <nav class="navbar navbar-expand-md sidebarNavigation d-block" data-sidebarClass="navbar-dark" style="background-color:transparent; ">
    @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId, isSidebar = false })
  </nav>
  <div class="@newproduct"><a class="" href="~/newproducts">New Arrival</a></div>
  <div class="@saleall"><a href="~/sale-all" class="sale-all">Sale</a></div>
  <div class="@about"><a href="~/orderinformation">How To Order?</a></div>

  <div class="@contact"><a href="~/contactus">Contact</a></div>
</div>


<script>
	window.onload = function () { if (window.jQuery) { $(document).ready(function () { $(".sidebarNavigation .navbar-collapse").hide().clone().appendTo("body").removeAttr("class").addClass("sideMenu").show(); $("body").append("<div class='overlay'></div>"); $(".navbar-toggle, .navbar-togglers").on("click", function () { $(".sideMenu").addClass($(".sidebarNavigation").attr("data-sidebarClass")); $(".sideMenu, .overlay, .xclose").toggleClass("open"); $(".overlay, .xclose").on("click", function () { $(this).removeClass("open"); $(".sideMenu").removeClass("open") }) }); $("body").on("click", ".sideMenu.open .nav-item", function () { if (!$(this).hasClass("dropdown")) { $(".sideMenu, .overlay, .xclose").toggleClass("open") } }); $(window).resize(function () { if ($(".navbar-toggler").is(":block")) { $(".sideMenu, .overlay").hide() } else { $(".sideMenu, .overlay, .xclose").show() } }) }) } else { console.log("sidebarNavigation Requires jQuery") } }

	$(document).on('click', '.dropdown', function (e) {
		e.stopPropagation();
		$('.dropdown').not($(this)).removeClass('active');
		$(this).toggleClass('active');
	});

	$(document).on('click', function () {
		$('.dropdown').removeClass('active');
	});

	$(document).on('click', '.dropdown-content', function (e) {
		e.stopPropagation();
	})

</script>

@if (Model.ShoppingCartEnabled)
{
	<script type="text/javascript">
		$(document).ready(function () {

			if (
				$('.toggle > input').is(':checked') &&
				!$(event.target).parents('.toggle').is('.toggle')
			) {
				$('.toggle > input').prop('checked', false);
			}


			$('.li-header-mini-cart').on('mouseenter', '#topcartlink', function () {
				$('#flyout-cart').addClass('active');
			});
			$('.li-header-mini-cart').on('mouseleave', '#topcartlink', function () {
				$('#flyout-cart').removeClass('active');
			});
			$('.li-header-mini-cart').on('mouseenter', '#flyout-cart', function () {
				$('#flyout-cart').addClass('active');
			});
			$('.li-header-mini-cart').on('mouseleave', '#flyout-cart', function () {
				$('#flyout-cart').removeClass('active');
			});

		});

		function openSearch() {
			document.getElementById("myOverlay").style.display = "block";
		}

		function closeSearch() {
			document.getElementById("myOverlay").style.display = "none";
		}
		function showMobileMenu() {
			$('.mobile-left-sidebar').addClass('active');
			$('.mobile-left-sidebar-overlay').addClass('active');
		}
		function closeMobileMenu() {
			$('.mobile-left-sidebar').removeClass('active');
			$('.mobile-left-sidebar-overlay').removeClass('active');
		}
		$('.show-mobile-menu-btn').click(showMobileMenu);
		$('.mobile-left-sidebar-overlay').click(closeMobileMenu);
		$('.close-mobile-menu-btn').cli


	</script>
}